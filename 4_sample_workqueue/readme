/*                                                               
# 200105、210228 : 此範例執行步驟，已經可以執行。已補充程式裡的註解，以及詳細測試 queue 順序

1. `$make`
-----------------------------
cc@4_sample_workqueue$make
make -C /usr/src/linux-headers-4.15.0-136-generic/ M=/home/cc/githome/Linux_Device_Driver/4_sample_workqueue modules;
make[1]: Entering directory '/usr/src/linux-headers-4.15.0-136-generic'
  CC [M]  /home/cc/githome/Linux_Device_Driver/4_sample_workqueue/mydemodrv_work.o
  LD [M]  /home/cc/githome/Linux_Device_Driver/4_sample_workqueue/mydemo_work.o
  Building modules, stage 2.
  MODPOST 1 modules
  CC      /home/cc/githome/Linux_Device_Driver/4_sample_workqueue/mydemo_work.mod.o
  LD [M]  /home/cc/githome/Linux_Device_Driver/4_sample_workqueue/mydemo_work.ko
make[1]: Leaving directory '/usr/src/linux-headers-4.15.0-136-generic'
-----------------------------

2. `ls` : 確認編好的檔案

3. 載入module 「mydemo_work」 : `sudo insmod mydemo_work.ko`    ## 注意 : 是輸入檔>    案名稱(xxx.ko)

4. 查詢module 「mydemo_work」 : `sudo lsmod | grep mydemo_work`
-----------------------------
cc@4_sample_workqueue$sudo lsmod | grep mydemo_work
mydemo_work            16384  0
-----------------------------

5. 卸載 : `sudo rmmod mydemo_work`

6. 查詢有無成功 : `dmesg` 指令來察看系統日誌
-----------------------------
[ 2938.784923] [walter]200105 work queue : my_init: +++
[ 2938.784926] [walter]200105 work queue : my_init: ---
[ 2938.784930] [walter]200105 work queue : my_workqueue_handler: +++
[ 2944.038182] [walter]200105 work queue : my_workqueue_handler: ---
[ 2980.187105] [walter]200105 work queue : my_exit: +++
[ 2980.187107] [walter]200105 work queue : my_exit: ---
-----------------------------

7.
此範例示範了 Linux 核心中 work queue 的簡易使用。 
一開始載入模組之後，直接就初始化 workq ，並指定自定函式 my_workqueue_handler() 。而初始化完之後，就註冊進去系統核心之中。註冊完之後，核心會在眾多工作排程之中輪到執行 workq 之時去呼叫 my_workqueue_handler() ，所以觀察下面的執行結果可以看到，my_workqueue_handler() 是在模組完成函式 my_init() 的執行之後才去執行的。 

為了幫助理解，可以想像一種情境: 假設有一個工程師放假想要整天在家看電影，該位工程師準備了一張張的標籤，每張標籤上面都寫了一部電影名字。然後對這些標籤進行排列組合成一張清單，來安排電影播放順序。此時，宣告為 struct work_queue 的 workq 就是一張標籤，而 my_workqueue_handler 就是這張標籤上的電影名稱。在播放任何時候，都可以插入該張標籤進去播放清單之中的任何地方，並依序一部部電影播放下去，總會有輪到該張標籤然後去播放其指定的電影。

===============================
# 參考文件 :
  在Raspberry Pi & Pi2 上面學 Linux 驅動程式開發 -- work queue --
  http://blog.ittraining.com.tw/2015/04/raspberry-pi-pi2-linux-work-queue.html#more
*/
